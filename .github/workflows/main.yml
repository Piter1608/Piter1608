# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline
env: 
 EB_S3_BUCKET       : "aplication-bucket"
 EB_APPLICATION_NAME: "My-app"
 EB_ENVIROPMENT_NAME: "My-app-env"
 DEPLOY_PACKEGE_NAME: "app_${{ github.sha}}.zip"
 AWS_REGION_NAME    : "eu-central-1"


on:
  push:
    branches: [ "main" ]
  
jobs:
 my_ci_part:
  
    runs-on: ubuntu-latest
   
    steps:
    - name: Git clone our repo
      uses: actions/checkout@v1
     
    - name: Create ZIP Packege
      run : zip -r ${{env.DEPLOY_PACKEGE_NAME}}  ./ -x *.git*
      
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id    : ${{ secrets.MY_KEY }}
        aws-secret-access-key: ${{ secrets.MY_SECRET_KEY }}
        aws-region           : ${{ env.AWS_REGION_NAME }}
    - name: Copy package to s3 bucket
      run: aws s3 cp ${{ env.DEPLOY_PACKEGE_NAME}} s3://${{ env.EB_S3_BUCKET }}/
    - name: Print message for CI
      run : echo "CI Pipeline part finished successfully"
        
 my_cd_part:
  
    runs-on: ubuntu-latest
    needs: [my_ci_part]
   
    steps:
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
            aws-access-key-id    : ${{ secrets.MY_KEY }}
            aws-secret-access-key: ${{ secrets.MY_SECRET_KEY }}
            aws-region           : ${{ env.AWS_REGION_NAME }}
      - name : Create new ElasticBeanstalk Aplication
         run : |
         aws elasticbeanstalk create-application-version \
         --application-name ${{ env.EB_APPLICATION_NAME }} \
         --source-bundle S3Bucket-"${{ EB_S3_BUCKET }}",S3Key-${{ env.DEPLOY_PACKEGE_NAME}}" \
         --version-label "Ver-${{ github.sha}}" \
         --description "CommitSHA-${{ github.sha}}"
       -name : Deploy new EB Application
         run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIROPMENT_NAME}} --version-lablel "Ver-${{ github.sha}}"
       - name: Print message for CD
         run : echo "CD Pipeline part finished successfully"
       
            
